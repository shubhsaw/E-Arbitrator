const express = require("express")
const mongoose = require("mongoose")
const userModel = require("./Model/userModel");
const cors = require("cors")
const multer = require("multer")
const cloudinary = require("cloudinary").v2
const streamfier = require("streamifier")
const app = express();
const storage = multer.memoryStorage();
const upload = multer({ storage });

app.use(cors());
app.use(express.json());
cloudinary.config({

    cloud_name: "dryx57lbw",
    api_key: "321497162434155",
    api_secret: "NweBRQL3UrrEiMSkojPnOcqiLFg"


})

const streamUpload = (buffer) => {

    return new Promise((resolve, reject) => {

        const stream = cloudinary.uploader.upload_stream((err, res) => {
            if (res) resolve(res)
            else reject(err)
        })

        streamfier.createReadStream(buffer).pipe(stream);

    })



}


mongoose.connect("mongodb+srv://atharvkolhe00:1062037971@cluster0.yyskofu.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0").then(() => { console.log("connected") }).catch(() => { console.log("not connected") })

app.post("/register", upload.single("passportphoto"), async (req, res) => {

    const FileBuffer = req.file.buffer;
    try {
        const result = await streamUpload(FileBuffer);
        console.log(result);
        res.status(200).json({ result: "done baby" })
    } catch (err) {

        console.log(err);
        res.status(500).json({ err: "ma chud gyi baby" })

    }


})


app.post("/", async (req, res) => {

    try {
        const { name, username, address } = req.body;
        const user = new userModel({

            name: name,
            username: username,
            address: address
        })

        await user.save();
        res.status(200).json("everythin is done very fine");
    }
    catch (err) {

        console.log("error", err)
        res.status(500).json({ err: "error" })
    }

})

app.listen(5000, () => {
    console.log("running on a 5000")

})